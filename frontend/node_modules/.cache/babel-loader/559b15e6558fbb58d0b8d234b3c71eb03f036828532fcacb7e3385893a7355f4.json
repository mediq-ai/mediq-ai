{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\medic\\\\frontend\\\\src\\\\pages\\\\PatientPortal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientPortal() {\n  _s();\n  const [history, setHistory] = useState(null);\n  const [newDiagnosis, setNewDiagnosis] = useState('');\n  const token = localStorage.getItem('token');\n  const fetchHistory = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/patient/history', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setHistory(res.data.data);\n    } catch (error) {\n      console.error('Error fetching history:', error);\n    }\n  };\n  const updateHistory = async () => {\n    try {\n      const updatedDiagnoses = [...((history === null || history === void 0 ? void 0 : history.diagnoses) || []), newDiagnosis];\n      const res = await axios.post('http://localhost:5000/api/patient/history', {\n        diagnoses: updatedDiagnoses\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setHistory(res.data.data);\n      setNewDiagnosis('');\n    } catch (error) {\n      console.error('Error updating history:', error);\n    }\n  };\n  useEffect(() => {\n    fetchHistory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), history ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Your Diagnoses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: history.diagnoses.map((d, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: d\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 46\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newDiagnosis,\n        onChange: e => setNewDiagnosis(e.target.value),\n        placeholder: \"Add new diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateHistory,\n        children: \"Add Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No history found. Add some data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientPortal, \"FdFcfSpAX+pf2pcrPumPyr5/M6A=\");\n_c = PatientPortal;\nexport default PatientPortal;\nvar _c;\n$RefreshReg$(_c, \"PatientPortal\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PatientPortal","_s","history","setHistory","newDiagnosis","setNewDiagnosis","token","localStorage","getItem","fetchHistory","res","get","headers","Authorization","data","error","console","updateHistory","updatedDiagnoses","diagnoses","post","children","fileName","_jsxFileName","lineNumber","columnNumber","map","d","i","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/Code/medic/frontend/src/pages/PatientPortal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction PatientPortal() {\r\n  const [history, setHistory] = useState(null);\r\n  const [newDiagnosis, setNewDiagnosis] = useState('');\r\n  const token = localStorage.getItem('token');\r\n\r\n  const fetchHistory = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/patient/history', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setHistory(res.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching history:', error);\r\n    }\r\n  };\r\n\r\n  const updateHistory = async () => {\r\n    try {\r\n      const updatedDiagnoses = [...(history?.diagnoses || []), newDiagnosis];\r\n      const res = await axios.post(\r\n        'http://localhost:5000/api/patient/history',\r\n        { diagnoses: updatedDiagnoses },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setHistory(res.data.data);\r\n      setNewDiagnosis('');\r\n    } catch (error) {\r\n      console.error('Error updating history:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Patient Portal</h2>\r\n      {history ? (\r\n        <div>\r\n          <h4>Your Diagnoses:</h4>\r\n          <ul>\r\n            {history.diagnoses.map((d, i) => <li key={i}>{d}</li>)}\r\n          </ul>\r\n          <input \r\n            value={newDiagnosis}\r\n            onChange={(e)=>setNewDiagnosis(e.target.value)}\r\n            placeholder=\"Add new diagnosis\"\r\n          />\r\n          <button onClick={updateHistory}>Add Diagnosis</button>\r\n        </div>\r\n      ) : (\r\n        <p>No history found. Add some data.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientPortal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}