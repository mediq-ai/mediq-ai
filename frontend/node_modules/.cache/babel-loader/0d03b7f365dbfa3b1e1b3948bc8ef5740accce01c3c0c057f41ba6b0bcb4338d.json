{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\medic\\\\frontend\\\\src\\\\pages\\\\Chatpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const token = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const handleSend = async () => {\n    if (!message) return;\n    try {\n      const res = await axios.post('http://localhost:5000/api/chat/ask', {\n        userId: user.id,\n        message\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const botReply = res.data.response;\n      setChatLog([...chatLog, {\n        sender: 'user',\n        text: message\n      }, {\n        sender: 'bot',\n        text: botReply\n      }]);\n      setMessage('');\n    } catch (error) {\n      console.error('Chat error:', error);\n      alert('Error sending message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Virtual Doctor Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        height: '300px',\n        overflow: 'auto'\n      },\n      children: chatLog.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '5px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        placeholder: \"Type your symptom or question...\",\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontStyle: 'italic',\n        marginTop: 10\n      },\n      children: \"*Disclaimer: This chatbot does not replace professional medical advice.*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"binKtiGECzMbBJQvJAwnAZBJbAU=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatPage","_s","message","setMessage","chatLog","setChatLog","token","localStorage","getItem","user","JSON","parse","handleSend","res","post","userId","id","headers","Authorization","botReply","data","response","sender","text","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","height","overflow","map","msg","idx","margin","type","value","placeholder","onChange","e","target","onClick","fontStyle","marginTop","_c","$RefreshReg$"],"sources":["D:/Code/medic/frontend/src/pages/Chatpage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ChatPage() {\r\n  const [message, setMessage] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n\r\n  const token = localStorage.getItem('token');\r\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n\r\n  const handleSend = async () => {\r\n    if (!message) return;\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost:5000/api/chat/ask',\r\n        { userId: user.id, message },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const botReply = res.data.response;\r\n\r\n      setChatLog([...chatLog, \r\n        { sender: 'user', text: message },\r\n        { sender: 'bot', text: botReply }\r\n      ]);\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Chat error:', error);\r\n      alert('Error sending message');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Virtual Doctor Chat</h2>\r\n      <div style={{border: '1px solid #ccc', height: '300px', overflow: 'auto'}}>\r\n        {chatLog.map((msg, idx) => (\r\n          <div key={idx} style={{ margin: '5px 0'}}>\r\n            <b>{msg.sender}:</b> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <input \r\n          type=\"text\"\r\n          value={message}\r\n          placeholder=\"Type your symptom or question...\"\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n      <p style={{ fontStyle: 'italic', marginTop: 10 }}>\r\n        *Disclaimer: This chatbot does not replace professional medical advice.*\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}